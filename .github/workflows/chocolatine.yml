name: Chocolatine

on:
  push:
    branches-ignore:
      - 'ga-ignore-'
  pull_request:
    branches-ignore:
      - 'ga-ignore-'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-BDX-2-1-chocolatine-antoine.candelon.git"
  EXECUTABLES: "exec"

jobs:
  check_coding_style:
    if: github.repositoryUrl != vars.MIRROR_URL
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check for banned functions
        run: |
          check.sh $(pwd) $(pwd)
          if ! [ -s "coding-style-reports.log" ]; then
            exit 0
          fi
          awk -F':' '{sub(/^ /, "", $3); print "::error file="$1",line="$2",title="$3" coding style error::"$4}' coding-style-reports.log
          exit 1
        
    
  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [ check_coding_style ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile
        run: make
        timeout-minutes: 2

      - name: Verify make clean
        run: |
          make clean
          export EXECUTABLES=${{ env.EXECUTABLES }}
          for executable in ${EXECUTABLES//,/ };
          do
            if ! [ -x "$executable" ]; then
              echo "Binary $executable is not executable"
              exit 1
            fi
          done
  
  run_tests:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    needs: [ check_program_compilation ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2
  
  push_to_mirror:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [ run_tests ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
